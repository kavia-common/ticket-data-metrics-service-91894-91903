{"is_source_file": true, "format": "Java", "description": "This Java class defines a service named TicketMetricsService responsible for processing uploaded Excel (.xlsx) files to calculate ticket resolution metrics such as Mean Time to Resolve (MTTR) and SLA adherence. It includes methods for validating file uploads, parsing Excel data, extracting relevant fields, and computing statistics based on ticket creation and resolution dates.", "external_files": ["com.example.ticketmetricsapibackend.dto.TicketMetricsResponse", "com.example.ticketmetricsapibackend.exception.BadRequestException", "com.example.ticketmetricsapibackend.exception.UnprocessableEntityException", "io.swagger.v3.oas.annotations.media.Schema", "org.apache.poi.ss.usermodel.*", "org.apache.poi.xssf.usermodel.XSSFWorkbook", "org.springframework.http.MediaType", "org.springframework.stereotype.Service", "org.springframework.web.multipart.MultipartFile", "java.io.InputStream", "java.time.Duration", "java.time.LocalDateTime", "java.time.ZoneId", "java.util.ArrayList", "java.util.List"], "external_methods": ["getInputStream()", "getNumberOfSheets()", "getSheetAt()", "getPhysicalNumberOfRows()", "getRow()", "findColumnIndex()", "getDateCell()", "getNumericCell()", "getStringCell()", "buildRemarks()", "round2()"], "published": ["computeMetrics"], "classes": [{"name": "TicketMetricsService", "description": "A Spring @Service class that provides functionality to process Excel files and generate ticket metrics including SLA and resolution time analysis."}], "methods": [{"name": "computeMetrics", "description": "Main method that validates the uploaded file, reads and processes the Excel sheet, and computes ticket metrics including total tickets, SLA adherence, and average resolution time."}, {"name": "validateFile", "description": "Validates that the uploaded MultipartFile is non-empty, of the correct content type, appropriately sized, and has a filename extension of .xlsx."}, {"name": "findColumnIndex", "description": "Searches the header row for expected column names and returns the index of the matching column."}, {"name": "getStringCell", "description": "Extracts a string value from a cell, handling different cell types."}, {"name": "getNumericCell", "description": "Retrieves a numeric value from a cell, converting from string if needed."}, {"name": "getDateCell", "description": "Attempts to parse a date from a cell, supporting numeric date formats and ISO-8601 strings."}, {"name": "buildRemarks", "description": "Generates remarks based on ticket processing outcomes, such as SLA adherence and resolution coverage."}, {"name": "round2", "description": "Rounds a double value to two decimal places."}], "calls": ["file.getInputStream()", "Workbook workbook = new XSSFWorkbook(is)", "workbook.getNumberOfSheets()", "workbook.getSheetAt(0)", "sheet.getPhysicalNumberOfRows()", "sheet.getRow()", "findColumnIndex()", "getDateCell()", "getNumericCell()", "buildRemarks()", "round2()"], "search-terms": ["TicketMetricsService", "computeMetrics", "Excel processing", "ticket metrics", "SLA adherence", "resolution time", "xlsx validation", "ticket header parsing"], "state": 2, "file_id": 10, "knowledge_revision": 22, "git_revision": "", "hash": "20f9f4ba350cebe7d6efffae5032f9ea", "format-version": 4, "code-base-name": "ticket_metrics_api_backend", "filename": "ticket_metrics_api_backend/src/main/java/com/example/ticketmetricsapibackend/service/TicketMetricsService.java", "revision_history": [{"22": ""}]}