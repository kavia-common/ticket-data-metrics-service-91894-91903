{"is_source_file": true, "format": "Java", "description": "This Java class defines a Spring service 'TicketMetricsService' responsible for processing uploaded Excel files to compute various ticket metrics, storing these metrics in an in-memory store, and providing methods to retrieve and map metrics to API response DTOs. It includes parsing Excel files, extracting relevant data, calculating metrics like average resolution time and SLA adherence, and formatting output data.", "external_files": ["com.example.ticketmetricsapibackend.dto.TicketMetricEntry", "com.example.ticketmetricsapibackend.dto.TicketMetricsApiResponseDTO", "com.example.ticketmetricsapibackend.dto.TicketMetricsResponse", "com.example.ticketmetricsapibackend.exception.BadRequestException", "com.example.ticketmetricsapibackend.exception.UnprocessableEntityException", "org.apache.poi.ss.usermodel.*", "org.apache.poi.xssf.usermodel.XSSFWorkbook", "org.springframework.stereotype.Service", "org.springframework.web.multipart.MultipartFile"], "external_methods": ["DateUtil.isCellDateFormatted", "localTime.ofInstant", "localTime.ZoneId.systemDefault", "sheet.getRow", "sheet.getSheetAt", "workbook.getNumberOfSheets"], "published": ["computeMetrics", "getMetrics", "mapToApiDto"], "classes": [{"name": "TicketMetricsService", "description": "Spring service class responsible for processing uploaded Excel files to compute and retrieve ticket metrics."}], "methods": [{"name": "computeMetrics", "description": "Parses the uploaded Excel file to compute ticket metrics such as total tickets, SLA adherence, and average resolution time; stores a general metrics entry."}, {"name": "getMetrics", "description": "Retrieves stored metrics entries filtered by optional application name and month."}, {"name": "mapToApiDto", "description": "Maps internal TicketMetricEntry objects to external API response DTOs, formatting fields appropriately."}, {"name": "validateFile", "description": "Validates the uploaded MultipartFile for type, size, and filename extension."}, {"name": "findColumnIndex", "description": "Finds the index of a header column in the Excel sheet by matching expected header names."}, {"name": "getStringCell", "description": "Extracts string value from a cell, handling different cell types."}, {"name": "getNumericCell", "description": "Extracts numeric value from a cell, parsing strings if necessary."}, {"name": "getDateCell", "description": "Extracts LocalDateTime from a cell, handling date-formatted and string cells."}, {"name": "buildRemarks", "description": "Generates summary remarks based on ticket counts and SLA compliance."}, {"name": "round2", "description": "Rounds a double value to two decimal places."}, {"name": "formatPercent", "description": "Formats a double to a percentage string with rounding."}], "calls": ["DateUtil.isCellDateFormatted", "workbook.getSheetAt", "sheet.getRow", "getDateCell", "getNumericCell", "findColumnIndex", "getStringCell"], "search-terms": ["TicketMetricsService", "Excel file processing", "SLA adherence calculation", "Ticket resolution time", "In-memory metrics store", "computeMetrics method", "mapping to API DTO", "Excel header parsing"], "state": 2, "file_id": 10, "knowledge_revision": 41, "git_revision": "f1bec52c5ccbefa7df96dd0bde7a7dbf4ab9d802", "revision_history": [{"22": ""}, {"38": "f1bec52c5ccbefa7df96dd0bde7a7dbf4ab9d802"}, {"41": "f1bec52c5ccbefa7df96dd0bde7a7dbf4ab9d802"}], "hash": "08e92119dfb0c975c04fe86aa3f470d1", "format-version": 4, "code-base-name": "ticket_metrics_api_backend", "filename": "ticket_metrics_api_backend/src/main/java/com/example/ticketmetricsapibackend/service/TicketMetricsService.java"}